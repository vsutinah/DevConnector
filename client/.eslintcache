[{"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\index.js":"1","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\App.js":"2","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Navbar.js":"5","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\store.js":"8","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\index.js":"9","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\alert.js":"10","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\types.js":"11","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\alert.js":"12","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Alert.js":"13","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\auth.js":"14","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\profile.js":"17","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"18","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\profile.js":"19","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"20","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"23","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"24","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"25","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"26","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\Experience.js":"27","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\Education.js":"28","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\utils\\formatDate.js":"29"},{"size":478,"mtime":1608097404525,"results":"30","hashOfConfig":"31"},{"size":2270,"mtime":1608617661933,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":1242,"mtime":1608544955737,"results":"34","hashOfConfig":"31"},{"size":1445,"mtime":1608597594745,"results":"35","hashOfConfig":"31"},{"size":3773,"mtime":1608534506440,"results":"36","hashOfConfig":"31"},{"size":2341,"mtime":1608534334882,"results":"37","hashOfConfig":"31"},{"size":517,"mtime":1608201265640,"results":"38","hashOfConfig":"31"},{"size":295,"mtime":1608545037069,"results":"39","hashOfConfig":"31"},{"size":912,"mtime":1608202195505,"results":"40","hashOfConfig":"31"},{"size":674,"mtime":1608615688491,"results":"41","hashOfConfig":"31"},{"size":604,"mtime":1608203749815,"results":"42","hashOfConfig":"31"},{"size":656,"mtime":1608245940606,"results":"43","hashOfConfig":"31"},{"size":3069,"mtime":1608598568943,"results":"44","hashOfConfig":"31"},{"size":2024,"mtime":1608615817691,"results":"45","hashOfConfig":"31"},{"size":398,"mtime":1608248678760,"results":"46","hashOfConfig":"31"},{"size":1315,"mtime":1608611495854,"results":"47","hashOfConfig":"31"},{"size":2387,"mtime":1608617770040,"results":"48","hashOfConfig":"31"},{"size":7091,"mtime":1608615746120,"results":"49","hashOfConfig":"31"},{"size":819,"mtime":1608546672734,"results":"50","hashOfConfig":"31"},{"size":423,"mtime":1608597530268,"results":"51","hashOfConfig":"31"},{"size":6566,"mtime":1608611113916,"results":"52","hashOfConfig":"31"},{"size":675,"mtime":1608610237614,"results":"53","hashOfConfig":"31"},{"size":8163,"mtime":1608611104087,"results":"54","hashOfConfig":"31"},{"size":3578,"mtime":1608612862481,"results":"55","hashOfConfig":"31"},{"size":3604,"mtime":1608616930259,"results":"56","hashOfConfig":"31"},{"size":1564,"mtime":1608616044674,"results":"57","hashOfConfig":"31"},{"size":1550,"mtime":1608617316649,"results":"58","hashOfConfig":"31"},{"size":128,"mtime":1608614172573,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1msl8bl",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\index.js",[],["122","123"],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\App.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\store.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\index.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\alert.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\types.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\alert.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\auth.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\reducers\\profile.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\actions\\profile.js",["124"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED } from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me'); // Load profile using user ID in token\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data // Contains profile data\r\n        })\r\n    } catch (e) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: e.response.statusText, status: e.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Create / update a user's profile\r\n// Parameters: submitted formData & history object that redirects us to client side route\r\n// Edit parameter tells us whether we are editting or creating the profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        // Set request headers\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // Send POST request to api/profile to create/edit profile\r\n        const res = await axios.post('api/profile', formData, config)\r\n\r\n        // Dispatch GET_PROFILE action\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data // Contains profile data\r\n        })\r\n\r\n        // Dispatch SET_ALERT action to create alert for profile edit/creation\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n\r\n    } catch (e) {\r\n        const errors = e.response.data.errors; // Array of errors\r\n        if (errors) {\r\n            // Dispatch SET_ALERT action for every error in array\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: e.response.statusText, status: e.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add experience to profile\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        // Set request headers\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // Send PUT request to api/profile/experience to add experience\r\n        const res = await axios.put('api/profile/experience', formData, config)\r\n\r\n        // Dispatch GET_PROFILE action\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data // Contains profile data\r\n        })\r\n\r\n        // Dispatch SET_ALERT action to create alert for profile edit/creation\r\n        dispatch(setAlert('Experience added', 'success'));\r\n\r\n        // Redirect to dashboard\r\n        history.push('/dashboard');\r\n\r\n    } catch (e) {\r\n        const errors = e.response.data.errors; // Array of errors\r\n        if (errors) {\r\n            // Dispatch SET_ALERT action for every error in array\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: e.response.statusText, status: e.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add experience to profile\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        // Set request headers\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // Send PUT request to api/profile/experience to add experience\r\n        const res = await axios.put('api/profile/education', formData, config)\r\n\r\n        // Dispatch GET_PROFILE action\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data // Contains profile data\r\n        })\r\n\r\n        // Dispatch SET_ALERT action to create alert for profile edit/creation\r\n        dispatch(setAlert('Education added', 'success'));\r\n\r\n        // Redirect to dashboard\r\n        history.push('/dashboard');\r\n\r\n    } catch (e) {\r\n        const errors = e.response.data.errors; // Array of errors\r\n        if (errors) {\r\n            // Dispatch SET_ALERT action for every error in array\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: e.response.statusText, status: e.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete experience\r\n// Use experience ID as argument for action\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        // Send DELETE request to api/profile/experience/:id\r\n        const res = await axios.delete(`api/profile/experience/${id}`)\r\n        \r\n        // Dispatch UPDATE_PROFILE action to delete experience fm profile\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        // Dispatch SET_ALERT action to create alert for deleting experience\r\n        dispatch(setAlert('Experience deleted', 'success'));\r\n\r\n    } catch (e) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: e.response.statusText, status: e.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete education\r\n// Use education ID as argument for action\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        // Send DELETE request to api/profile/education/:id\r\n        const res = await axios.delete(`api/profile/education/${id}`)\r\n        \r\n        // Dispatch UPDATE_PROFILE action to delete education fm profile\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        // Dispatch SET_ALERT action to create alert for deleting education\r\n        dispatch(setAlert('Education deleted', 'success'));\r\n\r\n    } catch (e) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: e.response.statusText, status: e.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm('Are you sure you want to delete your account?')) {\r\n        try {\r\n            // Send DELETE request to api/profile\r\n            const res = await axios.delete('api/profile')\r\n            \r\n            // Dispatch CLEAR_PROFILE action to delete profile\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            })\r\n\r\n            // Dispatch ACCOUNT_DELETED action to delete acct\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            })\r\n    \r\n            // Dispatch SET_ALERT action to create alert for deleting account\r\n            dispatch(setAlert('Account has been permanently deleted', 'success'));\r\n    \r\n        } catch (e) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: e.response.statusText, status: e.response.status }\r\n            })\r\n        }\r\n    }\r\n}","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["125","126"],"import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, getCurrentProfile, history }) => {\r\n    // Initial State for form data will be the empty form fields\r\n    const [ formData, setFormData ]  = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    }); \r\n\r\n    // useEffect to run getCurrentProfile and fetch data down the state\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        // Set formData when editing profile to contain pre-existing profile data\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        })\r\n    }, [loading]) // Run useEffect only when page is loading\r\n\r\n    // State to display social inputs/form fields\r\n    const [ displaySocialInputs, toggleSocialInputs ] = useState(false);\r\n\r\n    // Destructure formData\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n        \r\n    // onChange event handler that dynamically changes form field data with our input?\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n \r\n    // onSubmit\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n            {/* onClick that toggles the state of displaySocialInputs */}\r\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs) } type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {/* Fragment displays social inputs when user toggles the displaySocialInputs state to true */}\r\n        { displaySocialInputs && <Fragment>\r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n        </div>\r\n        </Fragment> }\r\n        \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\n{/* Bring in profile state as props to EditProfile through mapStateToProps */}\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile))\r\n","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",["127","128"],"import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../actions/profile';\r\n\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    // Initial form fields state will be empty form data for the form fields\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    // Initial toDate form field will be 'not disabled'\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    // Destructure form fields data\r\n    const {\r\n        company,\r\n        title,\r\n        location,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n    // onChange event handler that dynamically changes form field data with our input?\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n \r\n    // onSubmit\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addExperience(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n       Add An Experience\r\n      </h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" required value={title} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" required value={company} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n        </div>\r\n         <div class=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n            // set formData's current value to be its opposite value, then toggle disabled value\r\n            setFormData({ ...formData, current: !current })\r\n            toggleDisabled(!toDateDisabled);\r\n          }} />{' '}Current Job</p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          {/* Set 'to' form field to be disabled if current is checked */}\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={\r\n              toDateDisabled ? 'disabled' : ''\r\n          }/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description} \r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addExperience })(AddExperience)\r\n","C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",["129","130"],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\Dell E7240\\Documents\\GitHub\\DevConnector\\client\\src\\utils\\formatDate.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":195,"column":19,"nodeType":"137","messageId":"138","endLine":195,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":44,"column":8,"nodeType":"141","endLine":44,"endColumn":17,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":193,"column":1,"nodeType":"145","messageId":"146","endLine":193,"endColumn":79},{"ruleId":"135","severity":1,"message":"147","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"148","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"147","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"148","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["151"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"154","text":"155"},[1959,1968],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]